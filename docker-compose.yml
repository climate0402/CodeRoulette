version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: coderoulette_postgres
    environment:
      POSTGRES_DB: coderoulette
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d coderoulette"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: coderoulette_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Backend
  backend:
    build: ./backend
    container_name: coderoulette_backend
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/coderoulette?sslmode=disable
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-secret-key-here
      PORT: 8080
      GIN_MODE: release
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # React Frontend
  frontend:
    build: ./frontend
    container_name: coderoulette_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8080/api/v1
      REACT_APP_WS_URL: ws://localhost:8080/ws
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
